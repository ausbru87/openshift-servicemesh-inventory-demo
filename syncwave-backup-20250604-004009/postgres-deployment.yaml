apiVersion: apps/v1
kind: Deployment
metadata:
  name: postgres
  namespace: inventory-demo
  labels:
    app: postgres
    component: database
    version: v1
  annotations:
    argocd.argoproj.io/sync-wave: "1"
spec:
  replicas: 1
  strategy:
    type: Recreate
  selector:
    matchLabels:
      app: postgres
      version: v1
  template:
    metadata:
      labels:
        app: postgres
        component: database
        version: v1
      annotations:
        sidecar.istio.io/inject: "true"
    spec:
      # Remove all securityContext settings - let OpenShift handle everything
      containers:
      - name: postgres
        image: image-registry.openshift-image-registry.svc:5000/openshift/postgresql:13-el8
        ports:
        - containerPort: 5432
          name: postgres
          protocol: TCP
        env:
        - name: POSTGRESQL_USER
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: username
        - name: POSTGRESQL_PASSWORD
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: password
        - name: POSTGRESQL_DATABASE
          valueFrom:
            secretKeyRef:
              name: postgres-secret
              key: database
        volumeMounts:
        - name: postgres-storage
          mountPath: /var/lib/pgsql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "250m"
          limits:
            memory: "512Mi"
            cpu: "500m"
        livenessProbe:
          exec:
            command:
            - /usr/libexec/check-container
            - --live
          initialDelaySeconds: 120
          timeoutSeconds: 10
          periodSeconds: 20
          failureThreshold: 3
        readinessProbe:
          exec:
            command:
            - /usr/libexec/check-container
          initialDelaySeconds: 5
          timeoutSeconds: 1
          periodSeconds: 10
          failureThreshold: 3
      volumes:
      - name: postgres-storage
        persistentVolumeClaim:
          claimName: postgres-pvc
      restartPolicy: Always
      dnsPolicy: ClusterFirst