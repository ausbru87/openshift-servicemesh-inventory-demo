apiVersion: v1
kind: Secret
metadata:
  name: legacy-validator-cloud-init
  namespace: inventory-demo
  labels:
    app: legacy-validator
    component: vm
  annotations:
    argocd.argoproj.io/sync-wave: "0"
type: Opaque
stringData:
  userdata: |
    #cloud-config
    user: cloud-user
    password: redhat123
    chpasswd: { expire: False }
    ssh_pwauth: True
    
    # Create the validator service user
    users:
      - name: validator
        sudo: ['ALL=(ALL) NOPASSWD:ALL']
        shell: /bin/bash
    
    # System packages only - no pip needed!
    packages:
      - python3
      - python3-flask
      - python3-requests
      - git
      - curl
      - firewalld
    
    runcmd:
      # Create application directory
      - mkdir -p /opt/validator/logs
      - chown -R validator:validator /opt/validator
      
      # Clone the application
      - cd /tmp
      - git clone https://github.com/ausbru87/openshift-servicemesh-inventory-demo.git
      - cp openshift-servicemesh-inventory-demo/src/legacy-vm/validator.py /opt/validator/
      - chown -R validator:validator /opt/validator
      
      # Verify Python 3 and Flask installation
      - python3 --version
      - python3 -c "import flask; print('Flask version:', flask.__version__)"
      
      # Configure firewall
      - systemctl start firewalld
      - systemctl enable firewalld
      - firewall-cmd --permanent --add-port=8080/tcp
      - firewall-cmd --reload
      
      # Copy and install systemd service from repo
      - cp openshift-servicemesh-inventory-demo/src/legacy-vm/systemd/validator.service /etc/systemd/system/
      
      - systemctl daemon-reload
      - systemctl enable validator.service
      - systemctl start validator.service
      
      # Wait and test
      - sleep 10
      - systemctl status validator.service
      - curl -f http://localhost:8080/health && echo "Legacy validation service is ready!"
      
    final_message: "Modern 'legacy' validation service deployed on RHEL 8 with system packages only!"